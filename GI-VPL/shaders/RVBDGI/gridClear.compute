
#version 430

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in; 

struct Voxel
{
	uint colorOcclusionMask;
	uvec4 normalMasks;
};

layout(binding = 0, std430) buffer FineGridBuffer
{
	Voxel fineGridBuffer[];
};

layout(binding = 1, std430) buffer CoarseGridBuffer
{
	Voxel coarseGridBuffer[];
};


// get index into a 32x32x32 grid for the specified position
int GetGridIndex(in ivec3 position)
{
	return ((position.z * 1024) + (position.y * 32) + position.x);
}

void main()
{
	ivec3 voxelPos = ivec3(gl_GlobalInvocationID);
	int gridIndex = GetGridIndex(voxelPos);

	Voxel gridElement;
	gridElement.colorOcclusionMask = 0;	
	gridElement.normalMasks = uvec4(0, 0, 0, 0);

	// clear fine and coarse resolution voxel-grid
	fineGridBuffer[gridIndex] = gridElement;
	coarseGridBuffer[gridIndex] = gridElement;
}
