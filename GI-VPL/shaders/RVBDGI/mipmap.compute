#version 430

layout (local_size_x = 8, local_size_y = 8, local_size_z = 8) in;

layout(binding = 0) uniform sampler3D srcMip;
layout(binding = 1, rgba16f) writeonly uniform image3D dstMip;

uniform int srcMipLevel;

void main()
{
	ivec3 dstPos = ivec3(gl_GlobalInvocationID);
	ivec3 srcPos = dstPos * 2;

	vec4 srcColor0 = texelFetch(srcMip, srcPos + ivec3(0, 0, 0), srcMipLevel);
	vec4 srcColor1 = texelFetch(srcMip, srcPos + ivec3(1, 0, 0), srcMipLevel);
	vec4 srcColor2 = texelFetch(srcMip, srcPos + ivec3(0, 1, 0), srcMipLevel);
	vec4 srcColor3 = texelFetch(srcMip, srcPos + ivec3(1, 1, 0), srcMipLevel);
	vec4 srcColor4 = texelFetch(srcMip, srcPos + ivec3(0, 0, 1), srcMipLevel);
	vec4 srcColor5 = texelFetch(srcMip, srcPos + ivec3(1, 0, 1), srcMipLevel);
	vec4 srcColor6 = texelFetch(srcMip, srcPos + ivec3(0, 1, 1), srcMipLevel);
	vec4 srcColor7 = texelFetch(srcMip, srcPos + ivec3(1, 1, 1), srcMipLevel);
	
	// ISOTROPIC
	vec4 outColor = srcColor0 + srcColor1 + srcColor2 + srcColor3 + srcColor4 + srcColor5 + srcColor6 + srcColor7;
	outColor *= 0.125;
	
	imageStore(dstMip, dstPos, outColor);
}
